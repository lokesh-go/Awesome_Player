
import com.mpatric.mp3agic.ID3v2;
import com.mpatric.mp3agic.InvalidDataException;
import com.mpatric.mp3agic.Mp3File;
import com.mpatric.mp3agic.UnsupportedTagException;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.embed.swing.JFXPanel;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import org.apache.tika.exception.TikaException;
import org.xml.sax.SAXException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author hp
 */

public class MusicInterface extends javax.swing.JFrame implements Runnable{

    /**
     * Creates new form MusicInterface
     */
    int xMouse;                                                                                 // declare xMouse for get the x co-ordinate of JFrame
    int yMouse;                                                                                 // declare yMouse for get the Y co-ordinate of JFrame
    static int count =0,repeatval=0,suffledval=0,ratingcount=0;
    static int sg=0,ab=0,ar=0,gr=0;
    Thread t,t1,t2;
    private volatile boolean flag = true;
    static List <Integer> rec;
    static int[] hash,ratingarr;
    public MusicInterface() throws IOException, FileNotFoundException, SAXException, TikaException, UnsupportedTagException, InvalidDataException {                                                                   // constructor
        initComponents();
        t = new Thread(this);
        t1 = new Thread(this);
        t2 = new Thread(this);
        rec = new ArrayList<Integer>();
        hash = new int[MusicList.totalsong];
        ratingarr = new int[MusicList.totalsong];
        
        for(int j=0;j<MusicList.totalsong;j++)
        {
            hash[j]=0;
            ratingarr[j]=0;
        }
        final JFXPanel fxPanel = new JFXPanel();
        songpanel.setVisible(false);
        searchbox.setVisible(false);
        searchicon.setVisible(false);
        
        findDetails(count);
        
       volumeslider.setValue((int)player.getVolume()*100);
     /*   Plateform.runLater(new Runnable(){
            
            @Override
            public void run()
                {
                    initFX(fxPanel);
                }
        });*/
        setLocationRelativeTo(null);                                                            // JFrame visible in center
        getRootPane().setBorder(BorderFactory.createMatteBorder(2, 2, 2, 2, Color.RED));        // set border
    //    leftpanel.setBackground(new Color(153,153,153,64));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        leftpanel = new javax.swing.JPanel();
        lines = new javax.swing.JLabel();
        musicicon = new javax.swing.JLabel();
        recentplay = new javax.swing.JLabel();
        mostplayed = new javax.swing.JLabel();
        lyricslabel = new javax.swing.JLabel();
        titlebar = new javax.swing.JPanel();
        hide = new javax.swing.JLabel();
        cross = new javax.swing.JLabel();
        bottompanel = new javax.swing.JPanel();
        playicon = new javax.swing.JLabel();
        previcon = new javax.swing.JLabel();
        nexticon = new javax.swing.JLabel();
        soundicon = new javax.swing.JLabel();
        repeaticon = new javax.swing.JLabel();
        shuffleicon = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        volumeslider = new javax.swing.JSlider();
        seekbar = new javax.swing.JSlider();
        genrelabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        artistsbox = new javax.swing.JTextField();
        genrebox = new javax.swing.JTextField();
        trackbox = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        imagelabel = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        albumbox = new javax.swing.JTextField();
        duratnbox = new javax.swing.JTextField();
        titlebox1 = new javax.swing.JTextField();
        songnamebox = new javax.swing.JTextField();
        mymusictitle1 = new javax.swing.JLabel();
        songstitle = new javax.swing.JLabel();
        artistslabel = new javax.swing.JLabel();
        albumlabel = new javax.swing.JLabel();
        songpanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        songnamearea = new javax.swing.JTextArea();
        searchbox = new javax.swing.JTextField();
        searchicon = new javax.swing.JLabel();
        star3label = new javax.swing.JLabel();
        star1label = new javax.swing.JLabel();
        star4label = new javax.swing.JLabel();
        star5label = new javax.swing.JLabel();
        star2label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        leftpanel.setBackground(new java.awt.Color(102, 102, 102));
        leftpanel.setLayout(null);

        lines.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Menu_26px.png"))); // NOI18N
        leftpanel.add(lines);
        lines.setBounds(20, 30, 26, 26);

        musicicon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Audio_Wave2_35px.png"))); // NOI18N
        musicicon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        musicicon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                musiciconMouseClicked(evt);
            }
        });
        leftpanel.add(musicicon);
        musicicon.setBounds(10, 140, 40, 35);

        recentplay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Music_Notation_38px_1.png"))); // NOI18N
        recentplay.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        recentplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recentplayMouseClicked(evt);
            }
        });
        leftpanel.add(recentplay);
        recentplay.setBounds(10, 216, 40, 38);

        mostplayed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Next_38px.png"))); // NOI18N
        mostplayed.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mostplayed.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mostplayedMouseClicked(evt);
            }
        });
        leftpanel.add(mostplayed);
        mostplayed.setBounds(10, 292, 38, 38);

        lyricslabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Explicit_34px.png"))); // NOI18N
        lyricslabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lyricslabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lyricslabelMouseClicked(evt);
            }
        });
        leftpanel.add(lyricslabel);
        lyricslabel.setBounds(10, 370, 30, 40);

        jPanel1.add(leftpanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 510));

        titlebar.setBackground(new java.awt.Color(0, 0, 0));
        titlebar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                titlebarMouseDragged(evt);
            }
        });
        titlebar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                titlebarMousePressed(evt);
            }
        });
        titlebar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        hide.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Subtract_28px_1.png"))); // NOI18N
        hide.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hideMouseClicked(evt);
            }
        });
        titlebar.add(hide, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 10, -1, 20));

        cross.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Delete_20px_2.png"))); // NOI18N
        cross.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cross.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                crossMouseClicked(evt);
            }
        });
        titlebar.add(cross, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 10, -1, -1));

        jPanel1.add(titlebar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 990, 40));

        bottompanel.setBackground(new java.awt.Color(102, 0, 0));
        bottompanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        playicon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/play.png"))); // NOI18N
        playicon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        playicon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playiconMouseClicked(evt);
            }
        });
        bottompanel.add(playicon, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, -1, 60));

        previcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Skip_to_Start_43px_1.png"))); // NOI18N
        previcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        previcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                previconMouseClicked(evt);
            }
        });
        bottompanel.add(previcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 30, -1, 40));

        nexticon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_End_43px.png"))); // NOI18N
        nexticon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nexticon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nexticonMouseClicked(evt);
            }
        });
        bottompanel.add(nexticon, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 30, -1, -1));

        soundicon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/audio.png"))); // NOI18N
        soundicon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        soundicon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                soundiconMouseClicked(evt);
            }
        });
        bottompanel.add(soundicon, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 30, 40, 40));

        repeaticon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/repeat.png"))); // NOI18N
        repeaticon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        repeaticon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                repeaticonMouseClicked(evt);
            }
        });
        bottompanel.add(repeaticon, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 30, 40, -1));

        shuffleicon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/shuffleOff.png"))); // NOI18N
        shuffleicon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        shuffleicon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shuffleiconMouseClicked(evt);
            }
        });
        bottompanel.add(shuffleicon, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, 50, 40));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Drag_23px.png"))); // NOI18N
        bottompanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 90, 20, 30));

        volumeslider.setBackground(new java.awt.Color(102, 0, 0));
        volumeslider.setForeground(new java.awt.Color(255, 255, 255));
        volumeslider.setPaintTicks(true);
        volumeslider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                volumesliderStateChanged(evt);
            }
        });
        bottompanel.add(volumeslider, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 40, 120, 30));

        seekbar.setBackground(new java.awt.Color(102, 0, 0));
        bottompanel.add(seekbar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 890, -1));

        jPanel1.add(bottompanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 510, 1060, 130));

        genrelabel.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        genrelabel.setForeground(new java.awt.Color(255, 255, 255));
        genrelabel.setText("Genre");
        genrelabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        genrelabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                genrelabelMouseClicked(evt);
            }
        });
        jPanel1.add(genrelabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 90, 80, 40));

        jLabel1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Artists ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 240, 80, -1));

        jLabel2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Genre ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 290, 80, 40));

        jLabel5.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(":");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 237, 10, -1));

        jLabel6.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText(":");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 300, 10, 20));

        jLabel9.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText(":");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 187, 10, -1));

        artistsbox.setEditable(false);
        artistsbox.setBackground(new java.awt.Color(0, 0, 0));
        artistsbox.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        artistsbox.setForeground(new java.awt.Color(255, 102, 0));
        artistsbox.setBorder(null);
        jPanel1.add(artistsbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 240, 360, 30));

        genrebox.setEditable(false);
        genrebox.setBackground(new java.awt.Color(0, 0, 0));
        genrebox.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        genrebox.setForeground(new java.awt.Color(255, 102, 0));
        genrebox.setBorder(null);
        jPanel1.add(genrebox, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 300, 360, 30));

        trackbox.setEditable(false);
        trackbox.setBackground(new java.awt.Color(0, 0, 0));
        trackbox.setFont(new java.awt.Font("Microsoft JhengHei", 1, 22)); // NOI18N
        trackbox.setForeground(new java.awt.Color(255, 0, 0));
        trackbox.setBorder(null);
        jPanel1.add(trackbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 100, 40));

        jLabel10.setFont(new java.awt.Font("Microsoft JhengHei", 0, 20)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Title ");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 183, 70, 40));

        jLabel15.setFont(new java.awt.Font("Microsoft JhengHei", 0, 20)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Track No : ");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, 110, 40));
        jPanel1.add(imagelabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, 260, 240));

        jLabel14.setFont(new java.awt.Font("Microsoft JhengHei", 0, 20)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Album ");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 350, 90, -1));

        jLabel3.setFont(new java.awt.Font("Microsoft JhengHei", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Duration");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 410, 90, 20));

        jLabel8.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText(":");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 410, 10, 20));

        jLabel18.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText(":");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 350, 10, 30));

        albumbox.setEditable(false);
        albumbox.setBackground(new java.awt.Color(0, 0, 0));
        albumbox.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        albumbox.setForeground(new java.awt.Color(255, 102, 0));
        albumbox.setBorder(null);
        jPanel1.add(albumbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 350, 360, 30));

        duratnbox.setEditable(false);
        duratnbox.setBackground(new java.awt.Color(0, 0, 0));
        duratnbox.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        duratnbox.setForeground(new java.awt.Color(255, 102, 0));
        duratnbox.setBorder(null);
        jPanel1.add(duratnbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 410, 140, 30));

        titlebox1.setEditable(false);
        titlebox1.setBackground(new java.awt.Color(0, 0, 0));
        titlebox1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        titlebox1.setForeground(new java.awt.Color(255, 102, 0));
        titlebox1.setBorder(null);
        jPanel1.add(titlebox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 190, 360, 30));

        songnamebox.setEditable(false);
        songnamebox.setBackground(new java.awt.Color(0, 0, 0));
        songnamebox.setFont(new java.awt.Font("Microsoft YaHei UI", 2, 18)); // NOI18N
        songnamebox.setForeground(new java.awt.Color(255, 51, 51));
        songnamebox.setBorder(null);
        jPanel1.add(songnamebox, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 460, 760, 30));

        mymusictitle1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 32)); // NOI18N
        mymusictitle1.setForeground(new java.awt.Color(255, 255, 255));
        mymusictitle1.setText("My music");
        jPanel1.add(mymusictitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 150, 40));

        songstitle.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        songstitle.setForeground(new java.awt.Color(255, 255, 255));
        songstitle.setText("Songs");
        songstitle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        songstitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                songstitleMouseClicked(evt);
            }
        });
        jPanel1.add(songstitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 80, 40));

        artistslabel.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        artistslabel.setForeground(new java.awt.Color(255, 255, 255));
        artistslabel.setText("Artists");
        artistslabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        artistslabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                artistslabelMouseClicked(evt);
            }
        });
        jPanel1.add(artistslabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 80, 40));

        albumlabel.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        albumlabel.setForeground(new java.awt.Color(255, 255, 255));
        albumlabel.setText("Album");
        albumlabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        albumlabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                albumlabelMouseClicked(evt);
            }
        });
        jPanel1.add(albumlabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, 80, 40));

        songpanel.setBackground(new java.awt.Color(153, 0, 0));
        songpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 0)));
        songpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(153, 0, 0));

        songnamearea.setEditable(false);
        songnamearea.setBackground(new java.awt.Color(0, 0, 0));
        songnamearea.setColumns(20);
        songnamearea.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        songnamearea.setForeground(new java.awt.Color(255, 255, 255));
        songnamearea.setRows(5);
        songnamearea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 0)));
        jScrollPane1.setViewportView(songnamearea);

        songpanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 380));

        jPanel1.add(songpanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, -1, 380));

        searchbox.setBackground(new java.awt.Color(0, 0, 0));
        searchbox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchbox.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(searchbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 100, 270, 30));

        searchicon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Search_28px_1.png"))); // NOI18N
        searchicon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchicon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchiconMouseClicked(evt);
            }
        });
        jPanel1.add(searchicon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 100, 40, 30));

        star3label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Star_26px.png"))); // NOI18N
        star3label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        star3label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                star3labelMouseClicked(evt);
            }
        });
        jPanel1.add(star3label, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 70, 30, 30));

        star1label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Star_26px.png"))); // NOI18N
        star1label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        star1label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                star1labelMouseClicked(evt);
            }
        });
        jPanel1.add(star1label, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 70, 30, 30));

        star4label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Star_26px.png"))); // NOI18N
        star4label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        star4label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                star4labelMouseClicked(evt);
            }
        });
        jPanel1.add(star4label, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 70, 30, 30));

        star5label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Star_26px.png"))); // NOI18N
        star5label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        star5label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                star5labelMouseClicked(evt);
            }
        });
        jPanel1.add(star5label, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 70, 30, 30));

        star2label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Star_26px.png"))); // NOI18N
        star2label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        star2label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                star2labelMouseClicked(evt);
            }
        });
        jPanel1.add(star2label, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 70, 30, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1055, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    public void findDetails(int trackNo)
    {
        Mp3File song = null;
        try {
          song = new Mp3File(MusicList.mp3Files.get(trackNo).getPath());
        } catch (IOException ex) {
            Logger.getLogger(MusicList.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedTagException ex) {
            Logger.getLogger(MusicList.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidDataException ex) {
            Logger.getLogger(MusicList.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(song.hasId3v2Tag())
        {
            
            ID3v2 id3v2tag;
            id3v2tag = song.getId3v2Tag();
            byte[] imageData = id3v2tag.getAlbumImage();
            if(imageData!=null)
            {
                System.out.println("Not Null");
                BufferedImage img = null;
                try {
                    img = ImageIO.read(new ByteArrayInputStream(imageData));
                } catch (IOException ex) {
                    Logger.getLogger(MusicList.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                BufferedImage scaledImage = new BufferedImage(250,250, BufferedImage.TYPE_INT_ARGB);
                Graphics2D graphics2D = scaledImage.createGraphics();
                graphics2D.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
                graphics2D.drawImage(img, 0, 0, 250, 250, null);
                graphics2D.dispose();
                
                ImageIcon icon = new ImageIcon(scaledImage);
                
                imagelabel.setIcon(icon); 
            //    mi.setVisible(true);
            }
        }
    /*    System.out.println(ml.mp3Files.get(trackNo).getName());
        System.out.println("TNo : "+trackNo+1+"/"+totalsong);
        System.out.println("Title : "+Title.get(trackNo));
        System.out.println("Artists : "+Artists.get(trackNo));
        System.out.println("Genre : "+Genre.get(trackNo));
        System.out.println("Album : "+Albumm.get(trackNo)); */
        
        String ts = MusicList.Duration.get(trackNo);
        double d1 = Double.parseDouble(ts);
        int mm = (int)(d1*0.001)/60;
        int ss = (int)(d1*0.001)-(60*mm);
        
        try {
                 System.out.println("Hello : "+trackNo);
            titlebox1.setText(MusicList.Title.get(trackNo));
            artistsbox.setText(MusicList.Artists.get(trackNo));
            genrebox.setText(MusicList.Genre.get(trackNo));
            albumbox.setText(MusicList.Albumm.get(trackNo));
            duratnbox.setText(mm+":"+ss);
            trackbox.setText((trackNo+1)+"/"+MusicList.totalsong);
            songnamebox.setText(MusicList.mp3Files.get(trackNo).getName());
            getSongg(count);
            if(count!=0)
            {
                player.play();
              /*  if(!t.isAlive())
                    t1.start();
                else*/
               //     t.start();
            }
            
            Thread.sleep(5);
        } catch (InterruptedException ex) {
            Logger.getLogger(MusicList.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
      //  System.out.println();
      //  System.out.println("Total Songs : "+totalsong);
    }
    
    
    
    
    
    private void titlebarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titlebarMousePressed
        // TODO add your handling code here:
         xMouse = evt.getX();                                                           // get X co-ordinate
        yMouse = evt.getY();                                                            // get Y co-ordinate
    }//GEN-LAST:event_titlebarMousePressed

    private void titlebarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titlebarMouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();                                                     // co-ordinate of X 
        int y = evt.getYOnScreen();                                                     // co-ordinate of Y
        
        this.setLocation(x-xMouse, y-yMouse);                                           // set location to this x and y co-ordinate location
    }//GEN-LAST:event_titlebarMouseDragged

    private void hideMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hideMouseClicked
        // TODO add your handling code here:
    //    JFrame.setState(Frame.ICONIFIED);
 //   JFrame jf = new JFrame();
    //jf.setState(JFrame.ICONIFIED);
//    jf.dispatchEvent(new WindowEvent(jf, WindowEvent.WINDOW_ICONIFIED));
      this.setState(JFrame.ICONIFIED);  
    }//GEN-LAST:event_hideMouseClicked

    private void crossMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crossMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);                                                         // visibility false of JFrame
        dispose();                                                                      // distroy the code execution
        
        System.exit(0);
        
    }//GEN-LAST:event_crossMouseClicked
    static int temp=0;
    private void playiconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playiconMouseClicked
        // TODO add your handling code here:
        temp++;
        
        if(temp%2!=0)
        {
            //play block
           
            URL urlpath= getClass().getResource("/images/pause.png");                    // get pause.png image file from image folder
            playicon.setIcon(new ImageIcon(urlpath));                                    // set pause.png file into playicon label
            player.play();                                                               // play method for playing a music.
//            t.start();
        }
        else
        {
          //  try {
                //pause block
                
                URL urlpath= getClass().getResource("/images/play.png");                    // get play.png file from image folder
                playicon.setIcon(new ImageIcon(urlpath));                                   // set play.png file into playicon label
                player.pause();                                                             // pause the current playing music
             //   t.wait();
        //    } catch (InterruptedException ex) {
         //       Logger.getLogger(MusicInterface.class.getName()).log(Level.SEVERE, null, ex);
          //  }
        }
        
    }//GEN-LAST:event_playiconMouseClicked
    public void stopRunning()
    {
        flag = false;
    }
    public void run()
    {
       // System.out.println(seekbar.getMaximum());
       while(flag)
       {
        for(int j=0;j<seekbar.getMaximum();j++)
        {
            
            try {
         //        System.out.println(j);
                seekbar.setValue(j);
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(MusicInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
       }
       System.out.println("END");
    }
    
    
    
    
    static File file;
    static Media media;
    static MediaPlayer player;
    
    BufferedWriter bw;
    public void getSongg(int tno)
    {
   //     System.out.println(MusicList.mp3Files.get(tno).getAbsoluteFile());
            if(player!=null)
                player.stop();
            file = new File(MusicList.mp3Files.get(tno).toURI());   
            media = new Media(file.toURI().toString());                           // convert file type into URI and then string
            player = new MediaPlayer(media);
            
            if(MusicList.Title.get(tno)!=null)
            {
            String[] sa1 = MusicList.Title.get(tno).split("[-&(),]+");
            String[] sa2 = MusicList.Artists.get(tno).split("[-&(),]+");
        try {
            bw = new BufferedWriter(new FileWriter("Sample.txt"));
            bw.write(sa1[0]+"-"+sa2[0]);
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(MusicInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
            else
            {
                 titlebox1.setText("Video Clip");
              
            }
            String ts = MusicList.Duration.get(tno);
            double d1 = Double.parseDouble(ts);
            int ss = (int)(d1*0.001);
            
            ratmethod(tno);
            seekbar.setMinimum(0);
            seekbar.setMaximum(ss);
            seekbar.setValue(0);
            if(t.isAlive())
            {
                stopRunning();
            }
        /*    else if(t1.isAlive())
            {
                t1.interrupt();
            }*/
                
    }
    public void ratmethod(int tno)
    {
        if(ratingarr[tno]==1)
            {
                  URL urlpath= getClass().getResource("/images/starfilled.png");                // get noaudio.png file from image folder
                  star1label.setIcon(new ImageIcon(urlpath));
                  
                  URL urlpath2= getClass().getResource("/images/icons8_Star_26px.png");                // get noaudio.png file from image folder
                //  star1label.setIcon(new ImageIcon(urlpath));
                  star2label.setIcon(new ImageIcon(urlpath2));  
                  star3label.setIcon(new ImageIcon(urlpath2));
                  star4label.setIcon(new ImageIcon(urlpath2));
                  star5label.setIcon(new ImageIcon(urlpath2));
            }
            else if(ratingarr[tno]==2)
            {
                  URL urlpath= getClass().getResource("/images/starfilled.png");                // get noaudio.png file from image folder
                  star1label.setIcon(new ImageIcon(urlpath));
                  star2label.setIcon(new ImageIcon(urlpath));
                  
                  URL urlpath2= getClass().getResource("/images/icons8_Star_26px.png");                // get noaudio.png file from image folder
               //   star1label.setIcon(new ImageIcon(urlpath));
               //   star2label.setIcon(new ImageIcon(urlpath));  
                star3label.setIcon(new ImageIcon(urlpath2));
                star4label.setIcon(new ImageIcon(urlpath2));
                star5label.setIcon(new ImageIcon(urlpath2));
            }
            else if(ratingarr[tno]==3)
            {
                URL urlpath= getClass().getResource("/images/starfilled.png");                // get noaudio.png file from image folder
                  star1label.setIcon(new ImageIcon(urlpath));
                  star2label.setIcon(new ImageIcon(urlpath));  
                star3label.setIcon(new ImageIcon(urlpath));
                
                URL urlpath2= getClass().getResource("/images/icons8_Star_26px.png");                // get noaudio.png file from image folder
           //       star1label.setIcon(new ImageIcon(urlpath));
           //       star2label.setIcon(new ImageIcon(urlpath));  
           //     star3label.setIcon(new ImageIcon(urlpath));
                star4label.setIcon(new ImageIcon(urlpath2));
                star5label.setIcon(new ImageIcon(urlpath2));
            }
            else if(ratingarr[tno]==4)
            {
                URL urlpath= getClass().getResource("/images/starfilled.png");                // get noaudio.png file from image folder
                  star1label.setIcon(new ImageIcon(urlpath));
                  star2label.setIcon(new ImageIcon(urlpath));  
                star3label.setIcon(new ImageIcon(urlpath));
                star4label.setIcon(new ImageIcon(urlpath));
                
                URL urlpath2= getClass().getResource("/images/icons8_Star_26px.png");                // get noaudio.png file from image folder
              //    star1label.setIcon(new ImageIcon(urlpath));
             //     star2label.setIcon(new ImageIcon(urlpath));  
             //   star3label.setIcon(new ImageIcon(urlpath));
             //   star4label.setIcon(new ImageIcon(urlpath));
                star5label.setIcon(new ImageIcon(urlpath2));
            }
            else if(ratingarr[tno]==5)
            {
                URL urlpath= getClass().getResource("/images/starfilled.png");                // get noaudio.png file from image folder
                  star1label.setIcon(new ImageIcon(urlpath));
                  star2label.setIcon(new ImageIcon(urlpath));  
                star3label.setIcon(new ImageIcon(urlpath));
                star4label.setIcon(new ImageIcon(urlpath));
                star5label.setIcon(new ImageIcon(urlpath));
            }
            else if(ratingarr[tno]==0)
            {
                 URL urlpath= getClass().getResource("/images/icons8_Star_26px.png");                // get noaudio.png file from image folder
                  star1label.setIcon(new ImageIcon(urlpath));
                  star2label.setIcon(new ImageIcon(urlpath));  
                star3label.setIcon(new ImageIcon(urlpath));
                star4label.setIcon(new ImageIcon(urlpath));
                star5label.setIcon(new ImageIcon(urlpath));
            }
    }
    
    static int re=0;
    private void repeaticonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_repeaticonMouseClicked
        // TODO add your handling code here:
        re++;
        if(re%2!=0)
        {
            // repeat one on
             URL urlpath= getClass().getResource("/images/repeatone.png");              // get repeatone.png file from image folder
             repeaticon.setIcon(new ImageIcon(urlpath));                                // set repeatone.png file into repeaticon label
             repeatval=1;
        }
        else
        {
            // repeat one off
             URL urlpath= getClass().getResource("/images/repeat.png");                 // get repeat.png file from image folder
             repeaticon.setIcon(new ImageIcon(urlpath));                                // set repeat.png file into repeaticon label
             repeatval=0;
        }
    }//GEN-LAST:event_repeaticonMouseClicked

    private void soundiconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_soundiconMouseClicked
        // TODO add your handling code here:
        re++;
        if(re%2!=0)
        {
            // sound off
             URL urlpath= getClass().getResource("/images/noaudio.png");                // get noaudio.png file from image folder
             soundicon.setIcon(new ImageIcon(urlpath));                                 // set noaudio.png file into soundicon label
             player.setVolume(0);
             volumeslider.setValue(0);
        }
        else
        {
            // sound on
             URL urlpath= getClass().getResource("/images/audio.png");                  // get audio.png file from image folder
             soundicon.setIcon(new ImageIcon(urlpath));                                 // set audio.png file into soundicon label
             player.setVolume(0.3);
             volumeslider.setValue(30);
        }
    }//GEN-LAST:event_soundiconMouseClicked
    
    private void recentplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recentplayMouseClicked
        songnamearea.setText("");
        for(int j=0;j<rec.size();j++)
        {
            String ts = MusicList.Duration.get(rec.get(j));
            double d1 = Double.parseDouble(ts);
            int mm = (int)(d1*0.001)/60;
            int ss = (int)(d1*0.001)-(60*mm);
            
           
            songnamearea.append("   "+(rec.get(j)+1)+"\t"+MusicList.Title.get(rec.get(j))+"\t\t\t"+mm+":"+ss);
            songnamearea.append("\n\n");
        }
        hidemethod(false);
        searchbox.setVisible(false);
        searchicon.setVisible(false);
        songpanel.setVisible(true);
    }//GEN-LAST:event_recentplayMouseClicked
    
    private void nexticonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nexticonMouseClicked
        // TODO add your handling code here:
        if(repeatval==0 && suffledval==0)
        {
            count++;
        }
        else if(suffledval==1 && repeatval==0)
        {
            count=(int)(Math.random()*((MusicList.totalsong)+1));
        }
        System.out.println(count);
        rec.add(count);
        hash[count]++;
        int temp1 = count%MusicList.totalsong;
        findDetails(temp1);
        ratmethod(count);
    }//GEN-LAST:event_nexticonMouseClicked

    private void previconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previconMouseClicked
        // TODO add your handling code here:
       if(repeatval==0 && suffledval==0)
       {
        if(count==0)
           count=(MusicList.totalsong)-1;
        else
            count--;
       }
       else if (suffledval==1 && repeatval==0)
       {
            count=(int)(Math.random()*((MusicList.totalsong)+1));
       }
       rec.add(count);
       hash[count]++;
       findDetails(count);
       ratmethod(count);
    }//GEN-LAST:event_previconMouseClicked

    private void songstitleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_songstitleMouseClicked
        // TODO add your handling code here:
        sg=1;
        ab=0;
        gr=0;
        ar=0;
        songnamearea.setText("");
        for(int j=0;j<MusicList.Title.size();j++)
        {
            String ts = MusicList.Duration.get(j);
            double t = Double.parseDouble(ts);
            int mm = (int)(t*0.001)/60;
            int ss = (int)(t*0.001)-(60*mm);
            
           
            songnamearea.append("   "+(j+1)+"\t"+MusicList.Title.get(j)+"\t\t\t"+mm+":"+ss);
            songnamearea.append("\n\n");
        }
        hidemethod(false);
        searchbox.setVisible(true);
        searchicon.setVisible(true);
        songpanel.setVisible(true);
    }//GEN-LAST:event_songstitleMouseClicked
    public void hidemethod(boolean f)
    {
        jLabel15.setVisible(f);
        trackbox.setVisible(f);
        imagelabel.setVisible(f);
        songnamebox.setVisible(f);
        jLabel10.setVisible(f);
        jLabel14.setVisible(f);
        jLabel1.setVisible(f);
        jLabel2.setVisible(f);
        jLabel3.setVisible(f);
        jLabel18.setVisible(f);
        jLabel8.setVisible(f);
        jLabel6.setVisible(f);
        jLabel5.setVisible(f);
        jLabel9.setVisible(f);
        titlebox1.setVisible(f);
        artistsbox.setVisible(f);
        genrebox.setVisible(f);
        albumbox.setVisible(f);
        duratnbox.setVisible(f);
        star1label.setVisible(f);
        star2label.setVisible(f);
        star3label.setVisible(f);
        star4label.setVisible(f);
        star5label.setVisible(f);
    }
    private void musiciconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_musiciconMouseClicked
        // TODO add your handling code here:
        songpanel.setVisible(false);
        hidemethod(true);
        searchbox.setVisible(false);
        searchicon.setVisible(false);
    }//GEN-LAST:event_musiciconMouseClicked

    private void artistslabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_artistslabelMouseClicked
        // TODO add your handling code here:
        sg=0;
        ab=0;
        gr=0;
        ar=1;
        songnamearea.setText("");
        for(int j=0;j<MusicList.Artists.size();j++)
        {
            songnamearea.append("   "+(j+1)+"\t"+MusicList.Artists.get(j));
            songnamearea.append("\n\n");
        }
        hidemethod(false);
         searchbox.setVisible(true);
        searchicon.setVisible(true);
        songpanel.setVisible(true);
    }//GEN-LAST:event_artistslabelMouseClicked

    private void albumlabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_albumlabelMouseClicked
        // TODO add your handling code here:
        sg=0;
        ab=1;
        gr=0;
        ar=0;
        songnamearea.setText("");
        for(int j=0;j<MusicList.Albumm.size();j++)
        {
            songnamearea.append("   "+(j+1)+"\t"+MusicList.Albumm.get(j));
            songnamearea.append("\n\n");
        }
        hidemethod(false);
         searchbox.setVisible(true);
        searchicon.setVisible(true);
        songpanel.setVisible(true);
    }//GEN-LAST:event_albumlabelMouseClicked

    private void genrelabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genrelabelMouseClicked
        // TODO add your handling code here:
        sg=0;
        ab=0;
        gr=1;
        ar=0;
        songnamearea.setText("");
        for(int j=0;j<MusicList.Genre.size();j++)
        {
            songnamearea.append("   "+(j+1)+"\t"+MusicList.Genre.get(j));
            songnamearea.append("\n\n");
        }
        hidemethod(false);
         searchbox.setVisible(true);
        searchicon.setVisible(true);
        songpanel.setVisible(true);
    }//GEN-LAST:event_genrelabelMouseClicked

    private void searchiconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchiconMouseClicked
        // TODO add your handling code here:
        String fnd = searchbox.getText();
        if(fnd!=null)
        {
            if(sg==1)
            {
               songnamearea.setText("");
               for(int j=0;j<MusicList.Title.size();j++)
                {
                    if(MusicList.Title.get(j).contains(fnd))
                    {
                    String ts = MusicList.Duration.get(j);
                    double t = Double.parseDouble(ts);
                    int mm = (int)(t*0.001)/60;
                    int ss = (int)(t*0.001)-(60*mm);


                    songnamearea.append("   "+(j+1)+"\t"+MusicList.Title.get(j)+"\t\t\t"+mm+":"+ss);
                    songnamearea.append("\n\n");
                    }
                }
                
            }
            else if(ar==1)
            {
                
                songnamearea.setText("");
                for(int j=0;j<MusicList.Artists.size();j++)
                {
                    if(MusicList.Artists.get(j).contains(fnd))
                    {
                    songnamearea.append("   "+(j+1)+"\t"+MusicList.Artists.get(j));
                    songnamearea.append("\n\n");
                    }
                }
            }
            else if(ab==1)
            {
                 songnamearea.setText("");
                    for(int j=0;j<MusicList.Albumm.size();j++)
                    {
                        if(MusicList.Albumm.get(j).contains(fnd))
                        {
                        songnamearea.append("   "+(j+1)+"\t"+MusicList.Albumm.get(j));
                        songnamearea.append("\n\n");
                        }
                    }
            }
            else if(gr==1)
            {
                songnamearea.setText("");
                for(int j=0;j<MusicList.Genre.size();j++)
                {
                    if(MusicList.Genre.get(j).contains(fnd))
                    {
                    songnamearea.append("   "+(j+1)+"\t"+MusicList.Genre.get(j));
                    songnamearea.append("\n\n");
                    }
                }
            }
                hidemethod(false);
                songpanel.setVisible(true);
        }
    }//GEN-LAST:event_searchiconMouseClicked

    private void volumesliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_volumesliderStateChanged
        // TODO add your handling code here:
    //  System.out.println((double)(volumeslider.getValue()/100.00));
         player.setVolume((double)(volumeslider.getValue()/100.00));
    }//GEN-LAST:event_volumesliderStateChanged
    static int sff=0;
    private void shuffleiconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shuffleiconMouseClicked
        // TODO add your handling code here:
        sff++;
        if(sff%2!=0)
        {
            //suffled on
            URL urlpath= getClass().getResource("/images/shuffleOn.png");                // get noaudio.png file from image folder
            shuffleicon.setIcon(new ImageIcon(urlpath));
            suffledval=1;
        }
        else
        {
            // suffled off
            URL urlpath= getClass().getResource("/images/shuffleOff.png");                // get noaudio.png file from image folder
            shuffleicon.setIcon(new ImageIcon(urlpath));
            suffledval=0;
        }
    }//GEN-LAST:event_shuffleiconMouseClicked

    private void mostplayedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mostplayedMouseClicked
        // TODO add your handling code here:
        songnamearea.setText("");
        for(int j=0;j<MusicList.totalsong;j++)
        {
            if(hash[j]>2)
            {
            String ts = MusicList.Duration.get(j);
            double d1 = Double.parseDouble(ts);
            int mm = (int)(d1*0.001)/60;
            int ss = (int)(d1*0.001)-(60*mm);
            
           
            songnamearea.append("   "+(j+1)+"\t"+MusicList.Title.get(j)+"\t\t\t"+mm+":"+ss);
            songnamearea.append("\n\n");
            }
        }
        hidemethod(false);
        searchbox.setVisible(false);
        searchicon.setVisible(false);
        songpanel.setVisible(true);
    }//GEN-LAST:event_mostplayedMouseClicked
    
    private void lyricslabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lyricslabelMouseClicked
        try {
            
            ProcessBuilder pb = new ProcessBuilder("python", "lyrics_musixmatch.py");
            pb.directory(new File("C:\\Users\\Lokesh Chandra\\Documents\\NetBeansProjects\\MusicPlayer\\src\\"));
            Process p = pb.start();
             p.waitFor();
             p.destroy();
            // TODO add your handling code here:
            //Process p = Runtime.getRuntime().exec("python lyrics_musixmatch.py");
         //   Process p = Runtime.getRuntime().exec("python");
            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(MusicInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
            String line =null;
            StringBuilder sb = new StringBuilder();
            BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\Lokesh Chandra\\Documents\\NetBeansProjects\\MusicPlayer\\output.txt"));
            
            while((line = br.readLine())!=null)
            {
                sb.append(line);
                sb.append("\n");
            }
            br.close();
            songnamearea.setText("");
           
            hidemethod(false);
            searchbox.setVisible(false);
            searchicon.setVisible(false);
            songnamearea.setText(sb.toString());
            songpanel.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(MusicInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(MusicInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lyricslabelMouseClicked

    private void star1labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star1labelMouseClicked
        // TODO add your handling code here:
        
        URL urlpath= getClass().getResource("/images/starfilled.png");                // get noaudio.png file from image folder
        star1label.setIcon(new ImageIcon(urlpath));
        ratingarr[count]=1;
    }//GEN-LAST:event_star1labelMouseClicked

    private void star2labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star2labelMouseClicked
        // TODO add your handling code here:
        URL urlpath= getClass().getResource("/images/starfilled.png");                // get noaudio.png file from image folder
        star1label.setIcon(new ImageIcon(urlpath));
        star2label.setIcon(new ImageIcon(urlpath));
        ratingarr[count]=2;
    }//GEN-LAST:event_star2labelMouseClicked

    private void star3labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star3labelMouseClicked
        // TODO add your handling code here:
        URL urlpath= getClass().getResource("/images/starfilled.png");                // get noaudio.png file from image folder
         star1label.setIcon(new ImageIcon(urlpath));
            star2label.setIcon(new ImageIcon(urlpath));
       
        star3label.setIcon(new ImageIcon(urlpath));
        ratingarr[count]=3;
    }//GEN-LAST:event_star3labelMouseClicked

    private void star4labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star4labelMouseClicked
        // TODO add your handling code here:
        URL urlpath= getClass().getResource("/images/starfilled.png");                // get noaudio.png file from image folder
        star1label.setIcon(new ImageIcon(urlpath));
        star2label.setIcon(new ImageIcon(urlpath));
       
        star3label.setIcon(new ImageIcon(urlpath));
       
        star4label.setIcon(new ImageIcon(urlpath));
        ratingarr[count]=4;
    }//GEN-LAST:event_star4labelMouseClicked

    private void star5labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_star5labelMouseClicked
        // TODO add your handling code here:
        URL urlpath= getClass().getResource("/images/starfilled.png");                // get noaudio.png file from image folder
         star1label.setIcon(new ImageIcon(urlpath));
         star2label.setIcon(new ImageIcon(urlpath));
       
        star3label.setIcon(new ImageIcon(urlpath));
       
        star4label.setIcon(new ImageIcon(urlpath));
        
        star5label.setIcon(new ImageIcon(urlpath));
        ratingarr[count]=5;
    }//GEN-LAST:event_star5labelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MusicInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MusicInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MusicInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MusicInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MusicInterface().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(MusicInterface.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SAXException ex) {
                    Logger.getLogger(MusicInterface.class.getName()).log(Level.SEVERE, null, ex);
                } catch (TikaException ex) {
                    Logger.getLogger(MusicInterface.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedTagException ex) {
                    Logger.getLogger(MusicInterface.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InvalidDataException ex) {
                    Logger.getLogger(MusicInterface.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField albumbox;
    private javax.swing.JLabel albumlabel;
    public javax.swing.JTextField artistsbox;
    private javax.swing.JLabel artistslabel;
    private javax.swing.JPanel bottompanel;
    private javax.swing.JLabel cross;
    public javax.swing.JTextField duratnbox;
    public javax.swing.JTextField genrebox;
    private javax.swing.JLabel genrelabel;
    private javax.swing.JLabel hide;
    public javax.swing.JLabel imagelabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel leftpanel;
    private javax.swing.JLabel lines;
    private javax.swing.JLabel lyricslabel;
    private javax.swing.JLabel mostplayed;
    private javax.swing.JLabel musicicon;
    private javax.swing.JLabel mymusictitle1;
    private javax.swing.JLabel nexticon;
    private javax.swing.JLabel playicon;
    private javax.swing.JLabel previcon;
    private javax.swing.JLabel recentplay;
    private javax.swing.JLabel repeaticon;
    private javax.swing.JTextField searchbox;
    private javax.swing.JLabel searchicon;
    private javax.swing.JSlider seekbar;
    private javax.swing.JLabel shuffleicon;
    public javax.swing.JTextArea songnamearea;
    public javax.swing.JTextField songnamebox;
    private javax.swing.JPanel songpanel;
    private javax.swing.JLabel songstitle;
    private javax.swing.JLabel soundicon;
    private javax.swing.JLabel star1label;
    private javax.swing.JLabel star2label;
    private javax.swing.JLabel star3label;
    private javax.swing.JLabel star4label;
    private javax.swing.JLabel star5label;
    private javax.swing.JPanel titlebar;
    public javax.swing.JTextField titlebox1;
    public javax.swing.JTextField trackbox;
    private javax.swing.JSlider volumeslider;
    // End of variables declaration//GEN-END:variables
}
